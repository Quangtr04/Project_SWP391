import React, { useEffect } from "react";
import {
  Modal,
  Descriptions,
  Form,
  Input,
  Spin,
  Button,
  message,
  Select,
  InputNumber,
} from "antd";
import { format } from "date-fns";
import { useDispatch } from "react-redux";
import { updateHealthDeclaration } from "../../../redux/parent/parentSlice";

const HealthModal = ({ detailVisible, setDetailVisible, selectedChild }) => {
  const [form] = Form.useForm();
  const dispatch = useDispatch();

  useEffect(() => {
    if (selectedChild) {
      form.setFieldsValue({
        blood_type: selectedChild.health?.blood_type ?? "",
        height_cm: selectedChild.health?.height_cm,
        weight_kg: selectedChild.health?.weight_kg,
        allergy: selectedChild.health?.allergy,
        chronic_disease: selectedChild.health?.chronic_disease,
        vision_left: selectedChild.health?.vision_left,
        vision_right: selectedChild.health?.vision_right,
        hearing_left: selectedChild.health?.hearing_left,
        hearing_right: selectedChild.health?.hearing_right,
        health_status: selectedChild.health?.health_status,
      });
    }
  }, [selectedChild, form]);

  const handleUpdate = () => {
    form.validateFields().then((values) => {
      console.log("Gi√° tr·ªã t·ª´ form:", values);

      const transformedValues = {
        ...values,
        vision_left: values.vision_left?.toString(),
        vision_right: values.vision_right?.toString(),
        hearing_left: values.hearing_left?.toString(),
        hearing_right: values.hearing_right?.toString(),
        // üëá Th√™m nh√≥m m√°u hi·ªán t·∫°i n·∫øu ƒë√£ t·ªìn t·∫°i
        blood_type: selectedChild.health?.blood_type ?? values.blood_type,
      };

      dispatch(
        updateHealthDeclaration({
          studentId: selectedChild.student_id,
          declarationData: transformedValues,
        })
      )
        .unwrap()
        .then(() => {
          message.success("C·∫≠p nh·∫≠t th√†nh c√¥ng");
          setDetailVisible(false);
        })
        .catch((err) => {
          message.error(
            "C·∫≠p nh·∫≠t th·∫•t b·∫°i: " + (err?.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh")
          );
        });
    });
  };

  return (
    <Modal
      visible={detailVisible}
      title="Chi ti·∫øt h·ªçc sinh"
      footer={null}
      onCancel={() => setDetailVisible(false)}
    >
      {selectedChild ? (
        <Form
          form={form}
          layout="vertical"
          onFinish={handleUpdate}
          onFinishFailed={(err) => {
            console.log("Form validation failed:", err);
          }}
        >
          <Descriptions column={1} bordered size="small">
            {/* Tr∆∞·ªùng kh√¥ng ƒë∆∞·ª£c s·ª≠a */}
            <Descriptions.Item label="H·ªç v√† t√™n">
              {selectedChild.full_name}
            </Descriptions.Item>
            <Descriptions.Item label="Ng√†y sinh">
              {selectedChild.date_of_birth
                ? format(new Date(selectedChild.date_of_birth), "dd/MM/yyyy")
                : "Ch∆∞a c·∫≠p nh·∫≠t"}
            </Descriptions.Item>
            <Descriptions.Item label="Gi·ªõi t√≠nh">
              {selectedChild.gender || "Ch∆∞a c·∫≠p nh·∫≠t"}
            </Descriptions.Item>
            <Descriptions.Item label="L·ªõp">
              {selectedChild.class_name || "Ch∆∞a c·∫≠p nh·∫≠t"}
            </Descriptions.Item>

            {/* Nh√≥m m√°u: ch·ªâ cho input n·∫øu ch∆∞a c√≥ d·ªØ li·ªáu */}
            <Descriptions.Item label="Nh√≥m m√°u">
              {selectedChild.health?.blood_type ? (
                selectedChild.health.blood_type
              ) : (
                <Form.Item name="blood_type" noStyle>
                  <Input placeholder="Nh·∫≠p nh√≥m m√°u" />
                </Form.Item>
              )}
            </Descriptions.Item>

            {/* C√°c tr∆∞·ªùng cho ph√©p nh·∫≠p */}
            <Descriptions.Item label="Chi·ªÅu cao (cm)">
              <Form.Item
                name="height_cm"
                noStyle
                rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p chi·ªÅu cao" }]}
              >
                <InputNumber
                  min={30}
                  max={250}
                  step={1}
                  style={{ width: "100%" }}
                  placeholder="Nh·∫≠p chi·ªÅu cao"
                />
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="C√¢n n·∫∑ng (kg)">
              <Form.Item
                name="weight_kg"
                noStyle
                rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p c√¢n n·∫∑ng" }]}
              >
                <InputNumber
                  min={5}
                  max={200}
                  step={0.1}
                  style={{ width: "100%" }}
                  placeholder="Nh·∫≠p c√¢n n·∫∑ng"
                />
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="T·∫ßm nh√¨n tr√°i">
              <Form.Item
                name="vision_left"
                noStyle
                rules={[
                  { required: true, message: "Vui l√≤ng nh·∫≠p t·∫ßm nh√¨n tr√°i" },
                ]}
              >
                <InputNumber
                  min={0}
                  max={10}
                  step={0.1}
                  style={{ width: "100%" }}
                  stringMode
                  placeholder="VD: 1.0"
                />
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="T·∫ßm nh√¨n ph·∫£i">
              <Form.Item
                name="vision_right"
                noStyle
                rules={[
                  { required: true, message: "Vui l√≤ng nh·∫≠p t·∫ßm nh√¨n ph·∫£i" },
                ]}
              >
                <InputNumber
                  min={0}
                  max={10}
                  step={0.1}
                  style={{ width: "100%" }}
                  stringMode
                  placeholder="VD: 1.0"
                />
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="Th√≠nh l·ª±c tr√°i">
              <Form.Item
                name="hearing_left"
                noStyle
                rules={[
                  { required: true, message: "Vui l√≤ng nh·∫≠p th√≠nh l·ª±c tr√°i" },
                ]}
              >
                <InputNumber
                  min={0}
                  max={120}
                  step={0.1}
                  style={{ width: "100%" }}
                  stringMode
                  placeholder="VD: 80"
                />
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="Th√≠nh l·ª±c ph·∫£i">
              <Form.Item
                name="hearing_right"
                noStyle
                rules={[
                  { required: true, message: "Vui l√≤ng nh·∫≠p th√≠nh l·ª±c ph·∫£i" },
                ]}
              >
                <InputNumber
                  min={0}
                  max={120}
                  step={0.1}
                  style={{ width: "100%" }}
                  stringMode
                  placeholder="VD: 80"
                />
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="D·ªã ·ª©ng">
              <Form.Item name="allergy" noStyle>
                <Input placeholder="Nh·∫≠p d·ªã ·ª©ng (n·∫øu c√≥)" />
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="B·ªánh m√£n t√≠nh">
              <Form.Item name="chronic_disease" noStyle>
                <Input placeholder="Nh·∫≠p b·ªánh m√£n t√≠nh" />
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="Tr·∫°ng th√°i s·ª©c kh·ªèe">
              <Form.Item name="health_status" noStyle>
                <Select placeholder="Ch·ªçn tr·∫°ng th√°i s·ª©c kh·ªèe">
                  <Select.Option value="Kh·ªèe m·∫°nh">Kh·ªèe m·∫°nh</Select.Option>
                  <Select.Option value="C·∫ßn theo d√µi">
                    C·∫ßn theo d√µi
                  </Select.Option>
                  <Select.Option value="Nghi√™m tr·ªçng">
                    Nghi√™m tr·ªçng
                  </Select.Option>
                </Select>
              </Form.Item>
            </Descriptions.Item>

            <Descriptions.Item label="L·∫ßn c·∫≠p nh·∫≠t g·∫ßn nh·∫•t">
              {selectedChild.health?.updated_at || "Ch∆∞a c·∫≠p nh·∫≠t"}
            </Descriptions.Item>
          </Descriptions>

          <Form.Item style={{ marginTop: 16, textAlign: "right" }}>
            <Button type="primary" htmlType="submit">
              C·∫≠p nh·∫≠t
            </Button>
          </Form.Item>
        </Form>
      ) : (
        <Spin size="small" />
      )}
    </Modal>
  );
};

export default HealthModal;
